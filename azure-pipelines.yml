variables:
  lldbBuildId: 157

##########################################

jobs:
- job: Linux
  pool:
    vmImage: 'Ubuntu 16.04'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: 'llvm-build'
      pipeline: 'vadimcn.llvm-build'
      buildVersionToDownload: specific
      buildId: $(lldbBuildId)
      downloadType: single
      artifactName: 'Linux LLDB'
    displayName: 'Download LLDB'

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(System.ArtifactsDirectory)/Linux LLDB'
      targetFolder: '$(System.ArtifactsDirectory)/Linux_LLDB'
      contents: '**\*'

  - script: |
      echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-x86_64-unknown-linux-gnu
      npm install
    displayName: 'Setup'

  - script: |
      export LLDB_ROOT=$(System.ArtifactsDirectory)/Linux LLDB
      export PATH=$HOME/.cargo/bin:$LLDB_ROOT/bin:$PATH
      export ADAPTER_LOG=$HOME/lldb.log
      env
      npm run build
      npm run test
    displayName: 'Build+Test'

##########################################

- job: OSX
  pool:
    vmImage: 'macOS 10.13'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: 'llvm-build'
      pipeline: 'vadimcn.llvm-build'
      buildVersionToDownload: specific
      buildId: $(lldbBuildId)
      downloadType: single
      artifactName: 'OSX LLDB'
    displayName: 'Download LLDB'

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(System.ArtifactsDirectory)/OSX LLDB'
      targetFolder: '$(System.ArtifactsDirectory)/OSX_LLDB'
      contents: '**\*'

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-x86_64-apple-darwin
      npm install
    displayName: 'Setup'

  - script: |
      export LLDB_ROOT=$(System.ArtifactsDirectory)/OSX LLDB
      export PATH=$HOME/.cargo/bin:$LLDB_ROOT/bin:$PATH
      export ADAPTER_LOG=$HOME/lldb.log
      env
      npm run build
      npm run test
    displayName: 'Build+Test'

 ##########################################

- job: Windows
  pool:
    vmImage: 'VS2017-Win2016'

  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'

  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      addToPath: true
      architecture: 'x64'

  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: specific
      project: 'llvm-build'
      pipeline: 'vadimcn.llvm-build'
      buildVersionToDownload: specific
      buildId: $(lldbBuildId)
      downloadType: single
      artifactName: 'Windows LLDB'
    displayName: 'Download LLDB'

  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(System.ArtifactsDirectory)/Windows LLDB'
      targetFolder: '$(System.ArtifactsDirectory)/Windows_LLDB'
      contents: '**\*'

  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain nightly-x86_64-pc-windows-gnu
      npm install
    displayName: 'Setup'

  - script: |
      set LLDB_ROOT=$(System.ArtifactsDirectory)\Windows LLDB
      set PATH=%USERPROFILE%\.cargo\bin;%LLDB_ROOT%\bin;%PATH%
      set ADAPTER_LOG=%TEMP%\lldb.log
      set PYTHONHOME=%USEPYTHONVERSION_PYTHONLOCATION%
      set PYTHONPATH=%PYTHONHOME%\Lib;%PYTHONHOME%\DLLs
      set
      npm run build
      npm run test
    displayName: 'Build+Test'

  - script: |
      type %TEMP%\lldb.log
      echo - env ------------------
      set
      echo - dir -----------------------
      dir /s %AGENT_BUILDDIRECTORY%
    displayName: 'On Failure'
    condition: failed()
